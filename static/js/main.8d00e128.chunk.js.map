{"version":3,"sources":["Clock.jsx","App.js","index.js"],"names":["Clock","state","date","Date","this","timerId","setInterval","tick","prevProps","console","log","name","props","toLocaleTimeString","clearInterval","setState","React","Component","App","isClockVisible","clockName","className","type","onClick","Math","ceil","random","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,QAAUC,aACb,kBAAM,EAAKC,SAAQ,OAPzB,gCAWE,SAAmBC,GAEjBC,QAAQC,IACNF,EAAUG,OAASP,KAAKQ,MAAMD,KAC1BP,KAAKH,MAAMC,KAAKW,qBADpB,4CAGyCL,EAAUG,KAHnD,sBAGqEP,KAAKQ,MAAMD,SAjBtF,kCAqBE,WACEG,cAAcV,KAAKC,WAtBvB,kBAyBE,WACED,KAAKW,SAAS,CACZb,KAAM,IAAIC,SA3BhB,oBA+BE,WACE,OACE,2CAEG,IACAC,KAAKH,MAAMC,KAAKW,0BApCzB,GAA2BG,IAAMC,WCyDlBC,G,kNAtDbjB,MAAQ,CACNkB,gBAAgB,EAChBC,UAAW,K,4CAGb,WAAU,IAAD,OACP,EAAsChB,KAAKH,MAAnCkB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,oCACE,yBAAKC,UAAU,OACb,2CACEF,GAAkB,kBAAC,EAAD,CAAOR,KAAMS,KAEnC,4BACEE,KAAK,SACLC,QACE,WACE,EAAKR,SAAS,CACZI,gBAAgB,MALxB,cAYA,4BACEG,KAAK,SACLC,QACE,WACE,EAAKR,SAAS,CACZI,gBAAgB,MALxB,cAYA,4BACEG,KAAK,SACLC,QAAS,WACP,EAAKR,SAAS,CACZK,UAAU,GAAD,OAAKI,KAAKC,KAAqB,IAAhBD,KAAKE,eAJnC,wB,GAvCUV,IAAMC,YCDxBU,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8d00e128.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timerId = setInterval(\n      () => this.tick(), 1000,\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    // eslint-disable-next-line no-console\n    console.log(\n      prevProps.name === this.props.name\n        ? this.state.date.toLocaleTimeString()\n        // eslint-disable-next-line max-len\n        : `The Clock was renamed from Number:${prevProps.name} to Number:${this.props.name}`,\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    return (\n      <p>\n        Current time:\n        {' '}\n        {this.state.date.toLocaleTimeString()}\n      </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport { Clock } from './Clock';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: '1',\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <>\n        <div className=\"App\">\n          <h1>React clock</h1>\n          { isClockVisible && <Clock name={clockName} />}\n        </div>\n        <button\n          type=\"button\"\n          onClick={\n            () => {\n              this.setState({\n                isClockVisible: true,\n              });\n            }\n          }\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={\n            () => {\n              this.setState({\n                isClockVisible: false,\n              });\n            }\n          }\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.setState({\n              clockName: `${Math.ceil(Math.random() * 100)}`,\n            });\n          }}\n        >\n          Set random name\n        </button>\n      </>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}